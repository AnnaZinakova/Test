{
	"info": {
		"_postman_id": "489326b7-aace-42a0-b5e2-6f1f60936914",
		"name": "HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_Json = pm.response.json();\r",
							"pm.environment.set(\"token\",resp_Json.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "qwerty",
							"type": "text"
						},
						{
							"key": "password",
							"value": "qwerty",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}login",
					"host": [
						"{{url}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе.\r",
							"var schema = { \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"person\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"u_age\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"u_name\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"u_age\",\r",
							"        \"u_name\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"qa_salary_after_12_months\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"qa_salary_after_6_months\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"start_qa_salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"person\",\r",
							"    \"qa_salary_after_12_months\",\r",
							"    \"qa_salary_after_6_months\",\r",
							"    \"start_qa_salary\"\r",
							"  ]\r",
							"        \r",
							"};\r",
							"\r",
							"\r",
							"    pm.test('Schema is valid', function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"    });\r",
							"\r",
							"//В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент\r",
							"var resp_s = pm.response.json();\r",
							"var req_s = JSON.parse(pm.request.body);\r",
							"\r",
							"\r",
							"pm.test(\"u_salary_1_5_year = u_salary_1_5_year responce\", function () {\r",
							"    pm.expect(resp_s.person.u_salary_1_5_year).to.eql(req_s.salary*4);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months = qa_salary_after_6_months response\", function () {\r",
							"    pm.expect(resp_s.qa_salary_after_6_months).to.eql(req_s.salary*2)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months = qa_salary_after_12_months responce\", function () {\r",
							"    pm.expect(resp_s.qa_salary_after_12_months).to.eql(req_s.salary*2.9)\r",
							"});\r",
							"\r",
							"// Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"//Закидываем значение в окружение и достаем при написании запроса???\r",
							"var resp_salary = pm.response.json();\r",
							"pm.environment.set(\"u_salary_1.5_year\",resp_salary.person.u_salary_1_5_year);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\":28,\r\n    \"salary\":600,\r\n    \"name\":\"Oleg\",\r\n    \"auth_token\":\"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}user_info",
					"host": [
						"{{url}}user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status is 200\", function (){\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var res = pm.response.json();\r",
							"var schema ={\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"};\r",
							"pm.test(\"schema is valid\", function(){\r",
							"    pm.expect(tv4.validate(res,schema)).to.be.true\r",
							"});\r",
							"\r",
							"//В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var req = request.data;\r",
							"\r",
							"pm.test(\"Salary request = Salary response\", function(){\r",
							"    pm.expect(+(res.salary[1])).to.eql(req.salary*2)\r",
							"});\r",
							"\r",
							"pm.test(\"salary request[2] = salary response[2]\", function(){\r",
							"    pm.expect(+(res.salary[2])).to.eql(req.salary*3)\r",
							"});\r",
							"\r",
							"//Проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"pm.test(\"salary[2]>salary[1]\", function(){\r",
							"pm.expect(Number(res.salary[2])).to.be.above(Number(res.salary[1]))\r",
							"});\r",
							"\r",
							"pm.test(\"salary[2]>salary[0]\", function(){\r",
							"pm.expect(Number(res.salary[2])).to.be.above(Number(res.salary[0]))\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "34",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Dmitriy",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}new_data",
					"host": [
						"{{url}}new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "/test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status is 200\", function(){\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var JsonData = pm.response.json();\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"daily_food\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"daily_sleep\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"daily_food\",\r",
							"    \"daily_sleep\",\r",
							"    \"name\"\r",
							"  ]\r",
							"};\r",
							"    pm.test(\"schema is valid\", function(){\r",
							"        pm.expect(tv4.validate(JsonData,schema)).to.be.true;\r",
							"    });\r",
							"\r",
							"//В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var req = request.data;\r",
							"\r",
							"pm.test(\"weight coefficient for daily_food is true\", function(){\r",
							"    pm.expect(JsonData.daily_food).to.eql(req.weight*0.012)\r",
							"});\r",
							"\r",
							"pm.test(\"weight coefficient for daily_sleep is true\", function(){\r",
							"    pm.expect(JsonData.daily_sleep).to.eql(req.weight*2.5)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "85",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Max",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}test_pet_info",
					"host": [
						"{{url}}test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"\r",
							"var res = pm.response.json();\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"family\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"children\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"family\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"};\r",
							"\r",
							"    pm.test(\"schema is valid\", function(){\r",
							"        pm.expect(tv4.validate(res,schema)).to.be.true;\r",
							"    });\r",
							"\r",
							"//Проверить, что занчение поля salary = значению переменной salary из окружения\r",
							"var env = pm.environment.get('u_salary_1.5_year');\r",
							"console.log(env);\r",
							" pm.test(\"salary = environment\", function(){\r",
							"     pm.expect(res.salary).to.eql(env);\r",
							" });\r",
							" \r",
							"//Проверить, что значение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"\r",
							"var req = request.data;\r",
							"pm.test(\"age request = age response\", function(){\r",
							"    pm.expect(req.age).to.eql(res.age);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "36",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{u_salary_1.5_year}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Maria",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}get_test_user",
					"host": [
						"{{url}}get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Можете взять любой объект из присланного списка, используйте js random.\r",
							"//В объекте возьмите Cur_ID и передать через окружение в следующий запрос.\r",
							"\r",
							"\r",
							"var res = pm.response.json();\r",
							"\r",
							"//var item = res[Math.floor(Math.random()*res.length)];\r",
							"//var ID = item.Cur_ID;\r",
							"//pm.environment.set(\"Cur_ID\",ID);\r",
							"\r",
							"//***\r",
							"//1) получить список валют\r",
							"//2) итерировать список валют\r",
							"//3) в каждой итерации отправлять запрос на сервер для получения курса каждой валюты\r",
							"//4) если возвращается 500 код, переходим к следующей итреации\r",
							"//5) если получаем 200 код, проверяем response json на наличие поля \"Cur_OfficialRate\"\r",
							"//6) если поле есть, пишем в консоль инфу про валюту в виде response\r",
							"\r",
							"var val_200 = [];\r",
							"var item_200 = res[Math.floor(Math.random()*res.length)]\r",
							"var ID_200 = item_200.Cur_ID;\r",
							"pm.environment.set(\"Cur_ID\",ID_200);\r",
							"\r",
							"for (i of res){\r",
							"\r",
							"var req = {\r",
							"   url: pm.environment.get(\"url\")+\"curr_byn\",\r",
							"   method: \"POST\",\r",
							"   body:{\r",
							"   mode: 'formdata',\r",
							"   formdata: \r",
							"    [{key:\"auth_token\", value: pm.environment.get(\"token\")},\r",
							"     {key:\"curr_code\",value: i.Cur_ID}],\r",
							"   }\r",
							"};\r",
							"\r",
							"    pm.sendRequest(req, function (err, response) {\r",
							"      if (response.code === 500 ){\r",
							"       return;      \r",
							"      }\r",
							"      else if (response.code === 200 ){          \r",
							"                var val = response.json();        \r",
							"            \r",
							"              if(val.Cur_OfficialRate !== undefined){\r",
							"                  console.log(val);\r",
							"                val_200.push(val);\r",
							"              }        \r",
							"             \r",
							"             }                  \r",
							"      });\r",
							"};\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}currency",
					"host": [
						"{{url}}currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "/curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Статус код 200\r",
							"\r",
							"var resp = pm.response.json();\r",
							"var schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"Cur_Abbreviation\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_ID\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Cur_Name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_OfficialRate\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"Cur_Scale\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Date\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"Cur_Abbreviation\",\r",
							"    \"Cur_ID\",\r",
							"    \"Cur_Name\",\r",
							"    \"Cur_OfficialRate\",\r",
							"    \"Cur_Scale\",\r",
							"    \"Date\"\r",
							"  ]\r",
							"};\r",
							"console.log(resp);\r",
							"\r",
							"    pm.test(\"schema is valid\", function(){\r",
							"        pm.expect(tv4.validate(resp,schema)).to.be.true;\r",
							"    });\r",
							"\r",
							"   "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}curr_byn",
					"host": [
						"{{url}}curr_byn"
					]
				}
			},
			"response": []
		}
	]
}